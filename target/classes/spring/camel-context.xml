<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring 
    http://camel.apache.org/schema/spring/camel-spring.xsd http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd">
   
    <bean class="org.apache.commons.dbcp.BasicDataSource" id="dataStore">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="${db_url}"/>
        <property name="username" value="${db_username}"/>
        <property name="password" value="${db_password}"/>
        <property name="maxWait" value="${db_maxWait}"/>
    </bean>

    <bean class="com.loanapp.Processing" id="process">
        <property name="dataSource" ref="dataStore"/>
        
    </bean>
    
    <camelContext id="LoanApproval_db_Context" xmlns="http://camel.apache.org/schema/spring" streamCache="true">
        <dataFormats>
		   <json id="jsonOrder" library="Jackson"/>
		</dataFormats>
		
        <restConfiguration 
            component="jetty" 
            host="0.0.0.0" 
            port="9502"
            bindingMode="json"
            enableCORS="true" contextPath="/api/v1">
	    <apiProperty key="Access-Control-Allow-Origin" value="*"/>
            <apiProperty key="Access-Control-Allow-Headers" value="Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers, Authorization"/>
        </restConfiguration>

        <rest id="SSO API">	

            <post uri="/getResultsCache">
                <route id="get_Results_route">
                    <doTry>
                            <log message="Hit Received at ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} ${body[rollno]}"/>
                            <setHeader headerName="key"><simple>${body[rollno]}</simple></setHeader>
		                    <setHeader headerName="hotrod_conn"><simple>{{hotrod_conn}}</simple></setHeader>
                            <setHeader headerName="hotrod_user"><simple>{{hotrod_user}}</simple></setHeader>
                            <setHeader headerName="hotrod_pass"><simple>{{hotrod_pass}}</simple></setHeader>
		                    <bean ref="process" method="getIFSCFromCache"/>
		                    <log message="Body ${body}"/>
		                    <!-- <marshal ref="jsonOrder"/> -->
                            <log message="Hit Processed at ${date:now:yyyy-MM-dd'T'HH:mm:ss:SSS} "/>
                        <doCatch>
                            <exception>java.lang.RuntimeException</exception>
                            <removeHeaders pattern="*"/>
                            <setHeader headerName="Content-Type"><simple>application/json</simple></setHeader>
                            <setBody><simple>{"Status":"Failed","Messaage":"${exception.message}"}</simple></setBody>
                            <setHeader headerName="CamelRestletResponse"><simple>${body}</simple></setHeader>
                        </doCatch>
			            <doCatch>
          	            	<exception>java.lang.Exception</exception>
        	            	<removeHeaders pattern="*"/>
                            <setHeader headerName="Content-Type"><simple>application/json</simple></setHeader>
                            <setBody><simple>{"Status":"Failed","Messaage":"${exception.message}"}</simple></setBody>
                            <setHeader headerName="CamelRestletResponse"><simple>${body}</simple></setHeader>
			            </doCatch>
     		        </doTry>        
    	        </route>
            </post>

        </rest>
    </camelContext>
</beans>
